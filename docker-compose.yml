version: '3'

networks:
  docker_env:
    driver: bridge

services:
  influxdb:
    image: ${INFLUXDB_IMAGE}
    restart: always
    container_name: influxdb
    hostname: influxdb
    ports:
      - 8086:8086
    volumes:
      - "${INFLUXDB_DIR}/etc:/etc/influxdb"
      - "${INFLUXDB_DIR}/data:/var/lib/influxdb/data"
      - "${INFLUXDB_DIR}/meta:/var/lib/influxdb/meta"
      - "${INFLUXDB_DIR}/wal:/var/lib/influxdb/wal"
    environment:
      INFLUXDB_ADMIN_PASSWORD: "${INFLUXDB_ADMIN_PASSWORD:-12345678}"
    networks:
      - docker_env
  influxui:
    image: ${INFLUXUI_IMAGE}
    restart: always
    container_name: influxui
    hostname: influxui
    ports:
      - 3001:80
  grafana:
    image: ${GRAFANA_IMAGE}
    restart: always
    container_name: grafana
    hostname: grafana
    user: root
    ports:
      - "3000:3000"
    volumes:
      - "${GRAFANA_DIR}/etc:/etc/grafana/"
      - "${GRAFANA_DIR}/data:/var/lib/grafana/"
      - "${GRAFANA_DIR}/log:/var/log/grafana/"
    networks:
      - docker_env
  redis:
    image: ${REDIS_IMAGE}
    restart: always
    container_name: redis
    hostname: redis
    ports:
      - 8900:6379
    volumes:
      - "${REDIS_DIR}/data:/data"
    command:
      redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-12345678}
    networks:
      - docker_env
  mysql:
    image: ${MYSQL_IMAGE}
    restart: always
    container_name: mysql
    hostname: mysql
    ports:
      - 8306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-12345678}
      MYSQL_ROOT_HOST: ${MYSQL_ROOT_HOST}
    volumes:
      - "${MYSQL_DIR}/data:/var/lib/mysql"
      - "${MYSQL_DIR}/config:/etc/mysql/conf.d"
    networks:
      - docker_env
  nginx:
    image: ${NGINX_IMAGE}
    restart: always
    container_name: nginx
    hostname: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - "${NGINX_DIR}/nginx.conf:/etc/nginx/nginx.conf"
      - "${NGINX_DIR}/html:/usr/share/nginx/html"
      - "${NGINX_DIR}/conf.d:/etc/nginx/conf.d"
      - "${NGINX_DIR}/ssl:/etc/nginx/ssl"
      - "${NGINX_DIR}/logs:/var/log/nginx"
    networks:
      - docker_env
  php:
    image: ${PHP_IMAGE}
    restart: always
    container_name: php
    hostname: php
    volumes:
      - "${NGINX_DIR}/html:/www"
    networks:
      - docker_env
  cassandra-0:
    image: ${CASSANDRA_IMAGE}
    restart: always
    container_name: cassandra-0
    hostname: cassandra-0
    ports:
      - 8042:9042
      - 8199:7199
    volumes:
      - "${CASSANDRA_DIR}/0/data:/var/lib/cassandra"
    networks:
      - docker_env
  cassandra-1:
    image: ${CASSANDRA_IMAGE}
    restart: always
    container_name: cassandra-1
    hostname: cassandra-1
    ports:
      - 8043:9042
    volumes:
      - "${CASSANDRA_DIR}/1/data:/var/lib/cassandra"
    links:
      - cassandra-0:seed
    environment:
      - CASSANDRA_SEEDS=seed
    networks:
      - docker_env
  phpldapadmin:
    image: ${PHPLDAPADMIN_IMAGE}
    restart: always
    container_name: phpldapadmin
    hostname: phpldapadmin
    ports:
      - 8443:9443
      - 8080:980
    networks:
      - docker_env
  jaeger:
    image: ${JAEGER_IMAGE}
    restart: always
    container_name: jaeger
    hostname: jaeger
    ports:
      - 6831:6831/udp
      - 16686:16686
    volumes:
      - "${JAEGER_DIR}/bader:/badger"
    environment:
      - SPAN_STORAGE_TYPE=badger
      - BADGER_EPHEMERAL=false
      - BADGER_DIRECTORY_VALUE=/badger/data
      - BADGER_DIRECTORY_KEY=/badger/key
    networks:
      - docker_env